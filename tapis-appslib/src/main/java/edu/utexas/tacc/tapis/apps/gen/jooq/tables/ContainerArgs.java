/*
 * This file is generated by jOOQ.
 */
package edu.utexas.tacc.tapis.apps.gen.jooq.tables;


import edu.utexas.tacc.tapis.apps.gen.jooq.Keys;
import edu.utexas.tacc.tapis.apps.gen.jooq.TapisApp;
import edu.utexas.tacc.tapis.apps.gen.jooq.tables.records.ContainerArgsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContainerArgs extends TableImpl<ContainerArgsRecord> {

    private static final long serialVersionUID = 142733131;

    /**
     * The reference instance of <code>tapis_app.container_args</code>
     */
    public static final ContainerArgs CONTAINER_ARGS = new ContainerArgs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContainerArgsRecord> getRecordType() {
        return ContainerArgsRecord.class;
    }

    /**
     * The column <code>tapis_app.container_args.seq_id</code>. Arg sequence id
     */
    public final TableField<ContainerArgsRecord, Integer> SEQ_ID = createField(DSL.name("seq_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('container_args_seq_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "Arg sequence id");

    /**
     * The column <code>tapis_app.container_args.app_ver_seq_id</code>. Sequence id of application
     */
    public final TableField<ContainerArgsRecord, Integer> APP_VER_SEQ_ID = createField(DSL.name("app_ver_seq_id"), org.jooq.impl.SQLDataType.INTEGER, this, "Sequence id of application");

    /**
     * The column <code>tapis_app.container_args.arg_val</code>.
     */
    public final TableField<ContainerArgsRecord, String> ARG_VAL = createField(DSL.name("arg_val"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>tapis_app.container_args.meta_name</code>.
     */
    public final TableField<ContainerArgsRecord, String> META_NAME = createField(DSL.name("meta_name"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>tapis_app.container_args.meta_description</code>.
     */
    public final TableField<ContainerArgsRecord, String> META_DESCRIPTION = createField(DSL.name("meta_description"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>tapis_app.container_args.meta_required</code>.
     */
    public final TableField<ContainerArgsRecord, Boolean> META_REQUIRED = createField(DSL.name("meta_required"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>tapis_app.container_args.meta_key_value_pairs</code>.
     */
    public final TableField<ContainerArgsRecord, String[]> META_KEY_VALUE_PAIRS = createField(DSL.name("meta_key_value_pairs"), org.jooq.impl.SQLDataType.CLOB.getArrayDataType(), this, "");

    /**
     * Create a <code>tapis_app.container_args</code> table reference
     */
    public ContainerArgs() {
        this(DSL.name("container_args"), null);
    }

    /**
     * Create an aliased <code>tapis_app.container_args</code> table reference
     */
    public ContainerArgs(String alias) {
        this(DSL.name(alias), CONTAINER_ARGS);
    }

    /**
     * Create an aliased <code>tapis_app.container_args</code> table reference
     */
    public ContainerArgs(Name alias) {
        this(alias, CONTAINER_ARGS);
    }

    private ContainerArgs(Name alias, Table<ContainerArgsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContainerArgs(Name alias, Table<ContainerArgsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ContainerArgs(Table<O> child, ForeignKey<O, ContainerArgsRecord> key) {
        super(child, key, CONTAINER_ARGS);
    }

    @Override
    public Schema getSchema() {
        return TapisApp.TAPIS_APP;
    }

    @Override
    public Identity<ContainerArgsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONTAINER_ARGS;
    }

    @Override
    public UniqueKey<ContainerArgsRecord> getPrimaryKey() {
        return Keys.CONTAINER_ARGS_PKEY;
    }

    @Override
    public List<UniqueKey<ContainerArgsRecord>> getKeys() {
        return Arrays.<UniqueKey<ContainerArgsRecord>>asList(Keys.CONTAINER_ARGS_PKEY);
    }

    @Override
    public List<ForeignKey<ContainerArgsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ContainerArgsRecord, ?>>asList(Keys.CONTAINER_ARGS__CONTAINER_ARGS_APP_VER_SEQ_ID_FKEY);
    }

    public AppsVersions appsVersions() {
        return new AppsVersions(this, Keys.CONTAINER_ARGS__CONTAINER_ARGS_APP_VER_SEQ_ID_FKEY);
    }

    @Override
    public ContainerArgs as(String alias) {
        return new ContainerArgs(DSL.name(alias), this);
    }

    @Override
    public ContainerArgs as(Name alias) {
        return new ContainerArgs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ContainerArgs rename(String name) {
        return new ContainerArgs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ContainerArgs rename(Name name) {
        return new ContainerArgs(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, String, String, String, Boolean, String[]> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
